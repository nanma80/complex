#   The ordinary 3x3x3 with faces where orientation matters
#                    +----------------+
#                    |    Up(Red)     |
#                    | 01    02    03 |
#                    |       49       |
#                    | 04 50    51 05 |
#                    |       52       |
#                    | 06    07    08 |
#                    |                |
#   +----------------+----------------+----------------+----------------+
#   |  LEFT(Yellow)  |  FRONT(Blue)   |  RIGHT(Green)  |   BACK(White)  |
#   | 09    10    11 | 17    18    19 | 25    26    27 | 33    34    35 |
#   |       53       |       57       |       61       |       65       |
#   | 12 54    55 13 | 20 58    59 21 | 28 62    63 29 | 36 66    67 37 |
#   |       56       |       60       |       64       |       68       |
#   | 14    15    16 | 22    23    24 | 30    31    32 | 38    39    40 |
#   |                |                |                |                |
#   +----------------+----------------+----------------+----------------+
#                    |  Down(Orange)  |
#                    | 41    42    43 |
#                    |       69       |
#                    | 44 70    71 45 |
#                    |       72       |
#                    | 46    47    48 |
#                    |                |
#                    +----------------+
#   imaginary parts
#                       +-------------------+
#                       |      Up(Red)      |
#                       |163 139 115     164|
#                       |    091  79 092 141|
#                       |116  80  73 81  117|
#                       |140 093  82 094    |
#                       |165     118 142 166|
#                       |                   |
#   +-------------------+-------------------+-------------------+-------------------+
#   |   LEFT(Yellow)    |    FRONT(Blue)    |   RIGHT(Green)    |   BACK(White)     |
#   |167 143 119     168|171 147 123     172|175 151 127     176|179 155 131     180|
#   |    095  83 096 145|    099  87 100 149|    103  83 104 153|    107  87 108 157|
#   |120  84  74 85  121|124  88  75 89  125|128  85  76 84  129|132  89  77 88  133|
#   |144 097  86 098    |148 101  90 102    |152 105  86 106    |156 109  90 110    |
#   |169     122 146 170|173     126 150 174|177     130 154 178|181     134 158 182|
#   |                   |                   |                   |                   |
#   +-------------------+-------------------+-------------------+-------------------+
#                       |   Down(Orange)    |
#                       |183 159 135     184|
#                       |    111  82 112 161|
#                       |136  80  78 81  137|
#                       |160 113  79 114    |
#                       |185     138 162 186|
#                       |                   |
#                       +-------------------+
#
Cube := [
(01,03,08,06)(02,05,07,04)(09,33,25,17)(10,34,26,18)(11,35,27,19)(49,50,52,51),
(09,11,16,14)(10,13,15,12)(01,17,41,40)(04,20,44,37)(06,22,46,35)(53,54,56,55),
(17,19,24,22)(18,21,23,20)(06,25,43,16)(07,28,42,13)(08,30,41,11)(57,58,60,59),
(25,27,32,30)(26,29,31,28)(03,38,43,19)(05,36,45,21)(08,33,48,24)(61,62,64,63),
(33,35,40,38)(34,37,39,36)(03,09,46,32)(02,12,47,29)(01,14,48,27)(65,66,68,67),
(41,43,48,46)(42,45,47,44)(14,22,30,38)(15,23,31,39)(16,24,32,40)(69,70,72,71) ];
UD := [
(79,80,82,81),
(83,84,86,85),
(87,88,90,89),
(83,85,86,84),
(87,89,90,88),
(82,80,79,81) ];
UDL := [
(115,116,118,117)(119,123,127,131)(122,126,130,134), 
(119,120,122,121)(133,136,124,116)(132,137,125,117), 
(123,124,126,125)(118,121,135,128)(115,120,138,129), 
(127,128,130,129)(117,125,137,132)(116,124,136,133), 
(131,132,134,133)(115,129,138,120)(128,135,121,118), 
(135,136,138,137)(134,130,126,122)(131,127,123,119) ];
UDLF := [
(139,140,142,141)(143,147,151,155)(145,149,153,157)(144,148,152,156), 
(143,144,146,145)(157,160,148,140)(158,159,147,139)(155,162,150,142), 
(147,148,150,149)(142,145,159,152)(140,146,161,151)(141,143,160,154), 
(151,152,154,153)(149,161,156,141)(150,162,155,142)(147,159,158,139), 
(155,156,158,157)(153,162,144,139)(151,161,146,140)(154,160,143,141), 
(159,160,162,161)(158,154,150,146)(156,152,148,144)(157,153,149,145) ];
UDLR := [ 
(095,099,103,107)(096,100,104,108)(097,101,105,109)(098,102,106,110),
(091,110,111,099)(092,109,112,100)(093,108,113,101)(094,107,114,102),
(091,097,114,104)(092,095,113,106)(093,098,112,103)(094,096,111,105),
(091,099,111,110)(092,100,112,109)(093,101,113,108)(094,102,114,107),
(091,104,114,097)(092,106,113,095)(093,103,112,098)(094,105,111,096),
(107,103,099,095)(108,104,100,096)(109,105,101,097)(110,106,102,098) ];
UDLRF := [
(163,165,166,164)(167,171,175,179)(168,172,176,180)(169,173,177,181)(170,174,178,182), 
(167,169,170,168)(163,182,183,171)(165,180,185,173)(164,181,184,172)(166,179,186,174), 
(171,173,174,172)(165,170,184,175)(166,168,183,177)(163,169,186,176)(164,167,185,178), 
(175,177,178,176)(164,172,184,181)(166,174,186,179)(165,173,185,180)(163,171,183,182), 
(179,181,182,180)(163,176,186,169)(164,178,185,167)(165,175,184,170)(166,177,183,168), 
(183,185,186,184)(181,177,173,169)(182,178,174,170)(179,175,171,167)(180,176,172,168) ];
UDLRFB := [
(74,75,76,77),
(73,77,78,75),
(73,74,78,76),
(73,75,78,77),
(76,78,74,73),
(77,76,75,74) ];

Size3x3x3:=Size(Group(Cube));
Multiplier:=1;
variant:=ListN(Cube,UD,\*);
value:=Size(Group(variant))/Size3x3x3;
Print("Additional Factor for UD = ",value,"\n");
Multiplier:=Multiplier*Size(Group(variant))/Size3x3x3;
variant:=ListN(Cube,UDL,\*);
value:=Size(Group(variant))/Size3x3x3;
Print("Additional Factor for UDL = ",value,"\n");
Multiplier:=Multiplier*Size(Group(variant))/Size3x3x3;
variant:=ListN(Cube,UDLF,\*);
value:=Size(Group(variant))/Size3x3x3;
Print("Additional Factor for UDLF = ",value,"\n");
Multiplier:=Multiplier*Size(Group(variant))/Size3x3x3;
variant:=ListN(Cube,UDLR,\*);
value:=Size(Group(variant))/Size3x3x3;
Print("Additional Factor for UDLR = ",value,"\n");
Multiplier:=Multiplier*Size(Group(variant))/Size3x3x3;
variant:=ListN(Cube,UDLRF,\*);
value:=Size(Group(variant))/Size3x3x3;
Print("Additional Factor for UDLRF = ",value,"\n");
Multiplier:=Multiplier*Size(Group(variant))/Size3x3x3;
variant:=ListN(Cube,UDLRFB,\*);
value:=Size(Group(variant))/Size3x3x3;
Print("Additional Factor for UDLRFB = ",value,"\n");
Multiplier:=Multiplier*Size(Group(variant))/Size3x3x3;

FullComplex:=Cube;
FullComplex:=ListN(FullComplex,UD,\*);
FullComplex:=ListN(FullComplex,UDL,\*);
FullComplex:=ListN(FullComplex,UDLR,\*);
FullComplex:=ListN(FullComplex,UDLF,\*);
FullComplex:=ListN(FullComplex,UDLRF,\*);
FullComplex:=ListN(FullComplex,UDLRFB,\*);
Print("Accumulated Factor = ",Multiplier,"\n");
Print("Additional Factor for Complex 3x3x3 = ",Size(Group(FullComplex))/Size3x3x3,"\n");
Print("Size for Complex 3x3x3 = ",Size(Group(FullComplex)),"\n");
